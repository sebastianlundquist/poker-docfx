### YamlMime:ManagedReference
items:
- uid: CardEngine.DeckExtensions
  commentId: T:CardEngine.DeckExtensions
  id: DeckExtensions
  parent: CardEngine
  children:
  - CardEngine.DeckExtensions.Draw(CardEngine.Deck)
  - CardEngine.DeckExtensions.Draw(CardEngine.Deck,System.Int32)
  langs:
  - csharp
  - vb
  name: DeckExtensions
  nameWithType: DeckExtensions
  fullName: CardEngine.DeckExtensions
  type: Class
  source:
    remote:
      path: src/CardEngine/Deck.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: DeckExtensions
    path: ../src/CardEngine/Deck.cs
    startLine: 28
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nExtension methods for the Deck class.\n"
  example: []
  syntax:
    content: public static class DeckExtensions
    content.vb: Public Module DeckExtensions
  see:
  - linkId: CardEngine.Deck
    commentId: T:CardEngine.Deck
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: CardEngine.DeckExtensions.Draw(CardEngine.Deck)
  commentId: M:CardEngine.DeckExtensions.Draw(CardEngine.Deck)
  id: Draw(CardEngine.Deck)
  isExtensionMethod: true
  parent: CardEngine.DeckExtensions
  langs:
  - csharp
  - vb
  name: Draw(Deck)
  nameWithType: DeckExtensions.Draw(Deck)
  fullName: CardEngine.DeckExtensions.Draw(CardEngine.Deck)
  type: Method
  source:
    remote:
      path: src/CardEngine/Deck.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: Draw
    path: ../src/CardEngine/Deck.cs
    startLine: 35
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nDraws a Card from the top of the Deck.\n"
  example: []
  syntax:
    content: public static Card Draw(this Deck deck)
    parameters:
    - id: deck
      type: CardEngine.Deck
      description: The Deck.
    return:
      type: CardEngine.Card
      description: The Card.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Draw(deck As Deck) As Card
  overload: CardEngine.DeckExtensions.Draw*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: CardEngine.DeckExtensions.Draw(CardEngine.Deck,System.Int32)
  commentId: M:CardEngine.DeckExtensions.Draw(CardEngine.Deck,System.Int32)
  id: Draw(CardEngine.Deck,System.Int32)
  isExtensionMethod: true
  parent: CardEngine.DeckExtensions
  langs:
  - csharp
  - vb
  name: Draw(Deck, Int32)
  nameWithType: DeckExtensions.Draw(Deck, Int32)
  fullName: CardEngine.DeckExtensions.Draw(CardEngine.Deck, System.Int32)
  type: Method
  source:
    remote:
      path: src/CardEngine/Deck.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: Draw
    path: ../src/CardEngine/Deck.cs
    startLine: 49
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nDraws a given number of Cards from the top of the Deck.\n"
  example: []
  syntax:
    content: public static List<Card> Draw(this Deck deck, int count)
    parameters:
    - id: deck
      type: CardEngine.Deck
      description: The Deck.
    - id: count
      type: System.Int32
      description: The number of Cards to draw.
    return:
      type: System.Collections.Generic.List{CardEngine.Card}
      description: A List of the drawn Cards.
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function Draw(deck As Deck, count As Integer) As List(Of Card)
  overload: CardEngine.DeckExtensions.Draw*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: CardEngine.Deck
  commentId: T:CardEngine.Deck
  parent: CardEngine
  name: Deck
  nameWithType: Deck
  fullName: CardEngine.Deck
- uid: CardEngine
  commentId: N:CardEngine
  name: CardEngine
  nameWithType: CardEngine
  fullName: CardEngine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CardEngine.DeckExtensions.Draw*
  commentId: Overload:CardEngine.DeckExtensions.Draw
  name: Draw
  nameWithType: DeckExtensions.Draw
  fullName: CardEngine.DeckExtensions.Draw
- uid: CardEngine.Card
  commentId: T:CardEngine.Card
  parent: CardEngine
  name: Card
  nameWithType: Card
  fullName: CardEngine.Card
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.List{CardEngine.Card}
  commentId: T:System.Collections.Generic.List{CardEngine.Card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Card>
  nameWithType: List<Card>
  fullName: System.Collections.Generic.List<CardEngine.Card>
  nameWithType.vb: List(Of Card)
  fullName.vb: System.Collections.Generic.List(Of CardEngine.Card)
  name.vb: List(Of Card)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

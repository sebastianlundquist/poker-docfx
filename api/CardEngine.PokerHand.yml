### YamlMime:ManagedReference
items:
- uid: CardEngine.PokerHand
  commentId: T:CardEngine.PokerHand
  id: PokerHand
  parent: CardEngine
  children:
  - CardEngine.PokerHand.Add(CardEngine.Card)
  - CardEngine.PokerHand.Push(CardEngine.Card)
  langs:
  - csharp
  - vb
  name: PokerHand
  nameWithType: PokerHand
  fullName: CardEngine.PokerHand
  type: Class
  source:
    remote:
      path: src/CardEngine/PokerHand.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: PokerHand
    path: ../src/CardEngine/PokerHand.cs
    startLine: 9
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nRepresents a poker hand.\n"
  example: []
  syntax:
    content: 'public class PokerHand : Stack<Card>, IReadOnlyCollection<Card>, IEnumerable<Card>, ICollection, IEnumerable'
    content.vb: >-
      Public Class PokerHand

          Inherits Stack(Of Card)

          Implements IReadOnlyCollection(Of Card), IEnumerable(Of Card), ICollection, IEnumerable
  inheritance:
  - System.Object
  - System.Collections.Generic.Stack{CardEngine.Card}
  implements:
  - System.Collections.Generic.IReadOnlyCollection{CardEngine.Card}
  - System.Collections.Generic.IEnumerable{CardEngine.Card}
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Collections.Generic.Stack{CardEngine.Card}.Clear
  - System.Collections.Generic.Stack{CardEngine.Card}.Contains(CardEngine.Card)
  - System.Collections.Generic.Stack{CardEngine.Card}.CopyTo(CardEngine.Card[],System.Int32)
  - System.Collections.Generic.Stack{CardEngine.Card}.GetEnumerator
  - System.Collections.Generic.Stack{CardEngine.Card}.Peek
  - System.Collections.Generic.Stack{CardEngine.Card}.Pop
  - System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Stack{CardEngine.Card}.ToArray
  - System.Collections.Generic.Stack{CardEngine.Card}.TrimExcess
  - System.Collections.Generic.Stack{CardEngine.Card}.Count
  - System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#SyncRoot
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - CardEngine.PokerHand.CardEngine.PokerHandExtensions.IsFull
  - CardEngine.PokerHand.CardEngine.PokerHandExtensions.Evaluate
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CardEngine.PokerHand.Push(CardEngine.Card)
  commentId: M:CardEngine.PokerHand.Push(CardEngine.Card)
  id: Push(CardEngine.Card)
  parent: CardEngine.PokerHand
  langs:
  - csharp
  - vb
  name: Push(Card)
  nameWithType: PokerHand.Push(Card)
  fullName: CardEngine.PokerHand.Push(CardEngine.Card)
  type: Method
  source:
    remote:
      path: src/CardEngine/PokerHand.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: Push
    path: ../src/CardEngine/PokerHand.cs
    startLine: 15
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nInserts a Card at the top of the PokerHand.\n"
  example: []
  syntax:
    content: public void Push(Card card)
    parameters:
    - id: card
      type: CardEngine.Card
      description: The Card to insert at the top of the PokerHand.
    content.vb: Public Sub Push(card As Card)
  overload: CardEngine.PokerHand.Push*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardEngine.PokerHand.Add(CardEngine.Card)
  commentId: M:CardEngine.PokerHand.Add(CardEngine.Card)
  id: Add(CardEngine.Card)
  parent: CardEngine.PokerHand
  langs:
  - csharp
  - vb
  name: Add(Card)
  nameWithType: PokerHand.Add(Card)
  fullName: CardEngine.PokerHand.Add(CardEngine.Card)
  type: Method
  source:
    remote:
      path: src/CardEngine/PokerHand.cs
      branch: master
      repo: https://github.com/sebastianlundquist/poker.git
    id: Add
    path: ../src/CardEngine/PokerHand.cs
    startLine: 27
  assemblies:
  - CardEngine
  namespace: CardEngine
  summary: "\nCalls Push to insert a Card at the top of the PokerHand to enable simplified collection initialization.\n"
  example: []
  syntax:
    content: public void Add(Card card)
    parameters:
    - id: card
      type: CardEngine.Card
      description: The Card to insert at the top of the PokerHand.
    content.vb: Public Sub Add(card As Card)
  overload: CardEngine.PokerHand.Add*
  see:
  - linkId: CardEngine.PokerHand.Push(CardEngine.Card)
    commentId: M:CardEngine.PokerHand.Push(CardEngine.Card)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CardEngine
  commentId: N:CardEngine
  name: CardEngine
  nameWithType: CardEngine
  fullName: CardEngine
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Collections.Generic.Stack{CardEngine.Card}
  commentId: T:System.Collections.Generic.Stack{CardEngine.Card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Stack`1
  name: Stack<Card>
  nameWithType: Stack<Card>
  fullName: System.Collections.Generic.Stack<CardEngine.Card>
  nameWithType.vb: Stack(Of Card)
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card)
  name.vb: Stack(Of Card)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IReadOnlyCollection{CardEngine.Card}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{CardEngine.Card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  name: IReadOnlyCollection<Card>
  nameWithType: IReadOnlyCollection<Card>
  fullName: System.Collections.Generic.IReadOnlyCollection<CardEngine.Card>
  nameWithType.vb: IReadOnlyCollection(Of Card)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of CardEngine.Card)
  name.vb: IReadOnlyCollection(Of Card)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{CardEngine.Card}
  commentId: T:System.Collections.Generic.IEnumerable{CardEngine.Card}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Card>
  nameWithType: IEnumerable<Card>
  fullName: System.Collections.Generic.IEnumerable<CardEngine.Card>
  nameWithType.vb: IEnumerable(Of Card)
  fullName.vb: System.Collections.Generic.IEnumerable(Of CardEngine.Card)
  name.vb: IEnumerable(Of Card)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.Stack{CardEngine.Card}.Clear
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.Clear
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.Clear
  name: Clear()
  nameWithType: Stack<Card>.Clear()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.Clear()
  nameWithType.vb: Stack(Of Card).Clear()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Clear
    name: Clear
    nameWithType: Stack<Card>.Clear
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Clear
    name: Clear
    nameWithType: Stack(Of Card).Clear
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.Contains(CardEngine.Card)
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.Contains(CardEngine.Card)
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.Contains(`0)
  name: Contains(Card)
  nameWithType: Stack<Card>.Contains(Card)
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.Contains(CardEngine.Card)
  nameWithType.vb: Stack(Of Card).Contains(Card)
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).Contains(CardEngine.Card)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Contains(`0)
    name: Contains
    nameWithType: Stack<Card>.Contains
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Contains(`0)
    name: Contains
    nameWithType: Stack(Of Card).Contains
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.CopyTo(CardEngine.Card[],System.Int32)
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.CopyTo(CardEngine.Card[],System.Int32)
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
  name: CopyTo(Card[], Int32)
  nameWithType: Stack<Card>.CopyTo(Card[], Int32)
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.CopyTo(CardEngine.Card[], System.Int32)
  nameWithType.vb: Stack(Of Card).CopyTo(Card(), Int32)
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).CopyTo(CardEngine.Card(), System.Int32)
  name.vb: CopyTo(Card(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Stack<Card>.CopyTo
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Stack(Of Card).CopyTo
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.Card
    name: Card
    nameWithType: Card
    fullName: CardEngine.Card
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.GetEnumerator
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.GetEnumerator
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Stack<Card>.GetEnumerator()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.GetEnumerator()
  nameWithType.vb: Stack(Of Card).GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Stack<Card>.GetEnumerator
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Stack(Of Card).GetEnumerator
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.Peek
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.Peek
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.Peek
  name: Peek()
  nameWithType: Stack<Card>.Peek()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.Peek()
  nameWithType.vb: Stack(Of Card).Peek()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).Peek()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Peek
    name: Peek
    nameWithType: Stack<Card>.Peek
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Peek
    name: Peek
    nameWithType: Stack(Of Card).Peek
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.Pop
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.Pop
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.Pop
  name: Pop()
  nameWithType: Stack<Card>.Pop()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.Pop()
  nameWithType.vb: Stack(Of Card).Pop()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).Pop()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Pop
    name: Pop
    nameWithType: Stack<Card>.Pop
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.Pop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Pop
    name: Pop
    nameWithType: Stack(Of Card).Pop
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).Pop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  name: IEnumerable<Card>.GetEnumerator()
  nameWithType: Stack<Card>.IEnumerable<Card>.GetEnumerator()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.Generic.IEnumerable<CardEngine.Card>.GetEnumerator()
  nameWithType.vb: Stack(Of Card).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<Card>.GetEnumerator
    nameWithType: Stack<Card>.IEnumerable<Card>.GetEnumerator
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.Generic.IEnumerable<CardEngine.Card>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: Stack(Of Card).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Stack<Card>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Stack(Of Card).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Stack<Card>.ICollection.CopyTo
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Stack(Of Card).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  nameWithType: Stack<Card>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Stack(Of Card).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Stack<Card>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Stack(Of Card).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.ToArray
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.ToArray
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.ToArray
  name: ToArray()
  nameWithType: Stack<Card>.ToArray()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.ToArray()
  nameWithType.vb: Stack(Of Card).ToArray()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.ToArray
    name: ToArray
    nameWithType: Stack<Card>.ToArray
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.ToArray
    name: ToArray
    nameWithType: Stack(Of Card).ToArray
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.TrimExcess
  commentId: M:System.Collections.Generic.Stack{CardEngine.Card}.TrimExcess
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.TrimExcess
  name: TrimExcess()
  nameWithType: Stack<Card>.TrimExcess()
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.TrimExcess()
  nameWithType.vb: Stack(Of Card).TrimExcess()
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.TrimExcess
    name: TrimExcess
    nameWithType: Stack<Card>.TrimExcess
    fullName: System.Collections.Generic.Stack<CardEngine.Card>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.TrimExcess
    name: TrimExcess
    nameWithType: Stack(Of Card).TrimExcess
    fullName: System.Collections.Generic.Stack(Of CardEngine.Card).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack{CardEngine.Card}.Count
  commentId: P:System.Collections.Generic.Stack{CardEngine.Card}.Count
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.Count
  name: Count
  nameWithType: Stack<Card>.Count
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.Count
  nameWithType.vb: Stack(Of Card).Count
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).Count
- uid: System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  nameWithType: Stack<Card>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Stack(Of Card).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Stack{CardEngine.Card}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Stack{CardEngine.Card}
  definition: System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  nameWithType: Stack<Card>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Stack<CardEngine.Card>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Stack(Of Card).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Stack(Of CardEngine.Card).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CardEngine.PokerHand.CardEngine.PokerHandExtensions.IsFull
  commentId: M:CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
  parent: CardEngine.PokerHandExtensions
  definition: CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
  name: IsFull()
  nameWithType: PokerHandExtensions.IsFull()
  fullName: CardEngine.PokerHandExtensions.IsFull()
  spec.csharp:
  - uid: CardEngine.PokerHandExtensions.IsFull
    name: IsFull
    nameWithType: PokerHandExtensions.IsFull
    fullName: CardEngine.PokerHandExtensions.IsFull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardEngine.PokerHandExtensions.IsFull
    name: IsFull
    nameWithType: PokerHandExtensions.IsFull
    fullName: CardEngine.PokerHandExtensions.IsFull
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CardEngine.PokerHand.CardEngine.PokerHandExtensions.Evaluate
  commentId: M:CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
  parent: CardEngine.PokerHandExtensions
  definition: CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
  name: Evaluate()
  nameWithType: PokerHandExtensions.Evaluate()
  fullName: CardEngine.PokerHandExtensions.Evaluate()
  spec.csharp:
  - uid: CardEngine.PokerHandExtensions.Evaluate
    name: Evaluate
    nameWithType: PokerHandExtensions.Evaluate
    fullName: CardEngine.PokerHandExtensions.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardEngine.PokerHandExtensions.Evaluate
    name: Evaluate
    nameWithType: PokerHandExtensions.Evaluate
    fullName: CardEngine.PokerHandExtensions.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Stack`1
  commentId: T:System.Collections.Generic.Stack`1
  isExternal: true
  name: Stack<T>
  nameWithType: Stack<T>
  fullName: System.Collections.Generic.Stack<T>
  nameWithType.vb: Stack(Of T)
  fullName.vb: System.Collections.Generic.Stack(Of T)
  name.vb: Stack(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Stack`1
    name: Stack
    nameWithType: Stack
    fullName: System.Collections.Generic.Stack
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    nameWithType: IReadOnlyCollection
    fullName: System.Collections.Generic.IReadOnlyCollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.Stack`1.Clear
  commentId: M:System.Collections.Generic.Stack`1.Clear
  isExternal: true
  name: Clear()
  nameWithType: Stack<T>.Clear()
  fullName: System.Collections.Generic.Stack<T>.Clear()
  nameWithType.vb: Stack(Of T).Clear()
  fullName.vb: System.Collections.Generic.Stack(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Clear
    name: Clear
    nameWithType: Stack<T>.Clear
    fullName: System.Collections.Generic.Stack<T>.Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Clear
    name: Clear
    nameWithType: Stack(Of T).Clear
    fullName: System.Collections.Generic.Stack(Of T).Clear
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.Contains(`0)
  commentId: M:System.Collections.Generic.Stack`1.Contains(`0)
  isExternal: true
  name: Contains(T)
  nameWithType: Stack<T>.Contains(T)
  fullName: System.Collections.Generic.Stack<T>.Contains(T)
  nameWithType.vb: Stack(Of T).Contains(T)
  fullName.vb: System.Collections.Generic.Stack(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Contains(`0)
    name: Contains
    nameWithType: Stack<T>.Contains
    fullName: System.Collections.Generic.Stack<T>.Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Contains(`0)
    name: Contains
    nameWithType: Stack(Of T).Contains
    fullName: System.Collections.Generic.Stack(Of T).Contains
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
  commentId: M:System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
  isExternal: true
  name: CopyTo(T[], Int32)
  nameWithType: Stack<T>.CopyTo(T[], Int32)
  fullName: System.Collections.Generic.Stack<T>.CopyTo(T[], System.Int32)
  nameWithType.vb: Stack(Of T).CopyTo(T(), Int32)
  fullName.vb: System.Collections.Generic.Stack(Of T).CopyTo(T(), System.Int32)
  name.vb: CopyTo(T(), Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Stack<T>.CopyTo
    fullName: System.Collections.Generic.Stack<T>.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    nameWithType: Stack(Of T).CopyTo
    fullName: System.Collections.Generic.Stack(Of T).CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.GetEnumerator
  commentId: M:System.Collections.Generic.Stack`1.GetEnumerator
  isExternal: true
  name: GetEnumerator()
  nameWithType: Stack<T>.GetEnumerator()
  fullName: System.Collections.Generic.Stack<T>.GetEnumerator()
  nameWithType.vb: Stack(Of T).GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Stack<T>.GetEnumerator
    fullName: System.Collections.Generic.Stack<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Stack(Of T).GetEnumerator
    fullName: System.Collections.Generic.Stack(Of T).GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.Peek
  commentId: M:System.Collections.Generic.Stack`1.Peek
  isExternal: true
  name: Peek()
  nameWithType: Stack<T>.Peek()
  fullName: System.Collections.Generic.Stack<T>.Peek()
  nameWithType.vb: Stack(Of T).Peek()
  fullName.vb: System.Collections.Generic.Stack(Of T).Peek()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Peek
    name: Peek
    nameWithType: Stack<T>.Peek
    fullName: System.Collections.Generic.Stack<T>.Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Peek
    name: Peek
    nameWithType: Stack(Of T).Peek
    fullName: System.Collections.Generic.Stack(Of T).Peek
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.Pop
  commentId: M:System.Collections.Generic.Stack`1.Pop
  isExternal: true
  name: Pop()
  nameWithType: Stack<T>.Pop()
  fullName: System.Collections.Generic.Stack<T>.Pop()
  nameWithType.vb: Stack(Of T).Pop()
  fullName.vb: System.Collections.Generic.Stack(Of T).Pop()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.Pop
    name: Pop
    nameWithType: Stack<T>.Pop
    fullName: System.Collections.Generic.Stack<T>.Pop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.Pop
    name: Pop
    nameWithType: Stack(Of T).Pop
    fullName: System.Collections.Generic.Stack(Of T).Pop
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  commentId: M:System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  isExternal: true
  name: IEnumerable<T>.GetEnumerator()
  nameWithType: Stack<T>.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.Stack<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  nameWithType.vb: Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: IEnumerable<T>.GetEnumerator
    nameWithType: Stack<T>.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Stack<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
    name: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    nameWithType: Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    fullName: System.Collections.Generic.Stack(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  commentId: M:System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  nameWithType: Stack<T>.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Stack<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Stack(Of T).System.Collections.ICollection.CopyTo(Array, Int32)
  fullName.vb: System.Collections.Generic.Stack(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    nameWithType: Stack<T>.ICollection.CopyTo
    fullName: System.Collections.Generic.Stack<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    nameWithType: Stack(Of T).System.Collections.ICollection.CopyTo
    fullName: System.Collections.Generic.Stack(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
  commentId: M:System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
  isExternal: true
  name: IEnumerable.GetEnumerator()
  nameWithType: Stack<T>.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Stack<T>.System.Collections.IEnumerable.GetEnumerator()
  nameWithType.vb: Stack(Of T).System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Stack(Of T).System.Collections.IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    nameWithType: Stack<T>.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Stack<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    nameWithType: Stack(Of T).System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.Generic.Stack(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.ToArray
  commentId: M:System.Collections.Generic.Stack`1.ToArray
  isExternal: true
  name: ToArray()
  nameWithType: Stack<T>.ToArray()
  fullName: System.Collections.Generic.Stack<T>.ToArray()
  nameWithType.vb: Stack(Of T).ToArray()
  fullName.vb: System.Collections.Generic.Stack(Of T).ToArray()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.ToArray
    name: ToArray
    nameWithType: Stack<T>.ToArray
    fullName: System.Collections.Generic.Stack<T>.ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.ToArray
    name: ToArray
    nameWithType: Stack(Of T).ToArray
    fullName: System.Collections.Generic.Stack(Of T).ToArray
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.TrimExcess
  commentId: M:System.Collections.Generic.Stack`1.TrimExcess
  isExternal: true
  name: TrimExcess()
  nameWithType: Stack<T>.TrimExcess()
  fullName: System.Collections.Generic.Stack<T>.TrimExcess()
  nameWithType.vb: Stack(Of T).TrimExcess()
  fullName.vb: System.Collections.Generic.Stack(Of T).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Stack`1.TrimExcess
    name: TrimExcess
    nameWithType: Stack<T>.TrimExcess
    fullName: System.Collections.Generic.Stack<T>.TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.Stack`1.TrimExcess
    name: TrimExcess
    nameWithType: Stack(Of T).TrimExcess
    fullName: System.Collections.Generic.Stack(Of T).TrimExcess
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Stack`1.Count
  commentId: P:System.Collections.Generic.Stack`1.Count
  isExternal: true
  name: Count
  nameWithType: Stack<T>.Count
  fullName: System.Collections.Generic.Stack<T>.Count
  nameWithType.vb: Stack(Of T).Count
  fullName.vb: System.Collections.Generic.Stack(Of T).Count
- uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized
  commentId: P:System.Collections.Generic.Stack`1.System#Collections#ICollection#IsSynchronized
  isExternal: true
  name: ICollection.IsSynchronized
  nameWithType: Stack<T>.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Stack<T>.System.Collections.ICollection.IsSynchronized
  nameWithType.vb: Stack(Of T).System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Stack(Of T).System.Collections.ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
- uid: System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot
  commentId: P:System.Collections.Generic.Stack`1.System#Collections#ICollection#SyncRoot
  isExternal: true
  name: ICollection.SyncRoot
  nameWithType: Stack<T>.ICollection.SyncRoot
  fullName: System.Collections.Generic.Stack<T>.System.Collections.ICollection.SyncRoot
  nameWithType.vb: Stack(Of T).System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Stack(Of T).System.Collections.ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
- uid: CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
  commentId: M:CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
  name: IsFull(PokerHand)
  nameWithType: PokerHandExtensions.IsFull(PokerHand)
  fullName: CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
  spec.csharp:
  - uid: CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
    name: IsFull
    nameWithType: PokerHandExtensions.IsFull
    fullName: CardEngine.PokerHandExtensions.IsFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.PokerHand
    name: PokerHand
    nameWithType: PokerHand
    fullName: CardEngine.PokerHand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardEngine.PokerHandExtensions.IsFull(CardEngine.PokerHand)
    name: IsFull
    nameWithType: PokerHandExtensions.IsFull
    fullName: CardEngine.PokerHandExtensions.IsFull
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.PokerHand
    name: PokerHand
    nameWithType: PokerHand
    fullName: CardEngine.PokerHand
  - name: )
    nameWithType: )
    fullName: )
- uid: CardEngine.PokerHandExtensions
  commentId: T:CardEngine.PokerHandExtensions
  parent: CardEngine
  name: PokerHandExtensions
  nameWithType: PokerHandExtensions
  fullName: CardEngine.PokerHandExtensions
- uid: CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
  commentId: M:CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
  name: Evaluate(PokerHand)
  nameWithType: PokerHandExtensions.Evaluate(PokerHand)
  fullName: CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
  spec.csharp:
  - uid: CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
    name: Evaluate
    nameWithType: PokerHandExtensions.Evaluate
    fullName: CardEngine.PokerHandExtensions.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.PokerHand
    name: PokerHand
    nameWithType: PokerHand
    fullName: CardEngine.PokerHand
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardEngine.PokerHandExtensions.Evaluate(CardEngine.PokerHand)
    name: Evaluate
    nameWithType: PokerHandExtensions.Evaluate
    fullName: CardEngine.PokerHandExtensions.Evaluate
  - name: (
    nameWithType: (
    fullName: (
  - uid: CardEngine.PokerHand
    name: PokerHand
    nameWithType: PokerHand
    fullName: CardEngine.PokerHand
  - name: )
    nameWithType: )
    fullName: )
- uid: CardEngine.PokerHand.Push*
  commentId: Overload:CardEngine.PokerHand.Push
  name: Push
  nameWithType: PokerHand.Push
  fullName: CardEngine.PokerHand.Push
- uid: CardEngine.Card
  commentId: T:CardEngine.Card
  parent: CardEngine
  name: Card
  nameWithType: Card
  fullName: CardEngine.Card
- uid: CardEngine.PokerHand.Push(CardEngine.Card)
  commentId: M:CardEngine.PokerHand.Push(CardEngine.Card)
  isExternal: true
- uid: CardEngine.PokerHand.Add*
  commentId: Overload:CardEngine.PokerHand.Add
  name: Add
  nameWithType: PokerHand.Add
  fullName: CardEngine.PokerHand.Add
